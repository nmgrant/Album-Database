
import java.awt.Point;
import javax.swing.JOptionPane;
import java.util.*;
import java.awt.event.MouseEvent;
import java.sql.SQLException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nicholas Grant
 */
public class JDBC_GUI extends javax.swing.JFrame {
    
    private DatabaseAccess accessObject;
    private String[] albums;
    private int selectedAlbum = -1;
    private AlbumTableModel defaultAlbumModel;
    private StudioTableModel defaultStudioModel;
    /**
     * Creates new form JDBC_GUI
     */
    public JDBC_GUI() {
        initComponents();
        try {
            accessObject = new DatabaseAccess();
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
        populateList(accessObject.listAlbumTitles());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dataTables = new javax.swing.JTabbedPane();
        albumDataScrollPane = new javax.swing.JScrollPane();
        defaultAlbumModel = new AlbumTableModel(new ArrayList<String>
            (Arrays.asList("","","","","","")));
        albumDataTable = new javax.swing.JTable(defaultAlbumModel)
        { public String getToolTipText(MouseEvent e) {
            String tip = null;
            Point p = e.getPoint();
            int rowIndex = rowAtPoint(p);
            int colIndex = columnAtPoint(p);

            try {
                tip = getValueAt(rowIndex, colIndex).toString();
            } catch (RuntimeException e1) {
                //catch null pointer exception if mouse is over an empty line
            }

            return tip;
        }
    };
    studioDataScrollPane = new javax.swing.JScrollPane();
    defaultStudioModel = new StudioTableModel(new ArrayList<String>
        (Arrays.asList("","","","")));
    studioDataTable = new javax.swing.JTable(defaultStudioModel) { public String getToolTipText(MouseEvent e) {
        String tip = null;
        Point p = e.getPoint();
        int rowIndex = rowAtPoint(p);
        int colIndex = columnAtPoint(p);

        try {
            tip = getValueAt(rowIndex, colIndex).toString();
        } catch (RuntimeException e1) {
            //catch null pointer exception if mouse is over an empty line
        }

        return tip;
    }
    };
    resultScrollPane = new javax.swing.JScrollPane();
    resultList = new javax.swing.JList();
    insertAlbumButton = new javax.swing.JButton();
    removeButton = new javax.swing.JButton();
    insertStudioButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("JDBC GUI");
    addWindowListener(new java.awt.event.WindowAdapter() {
        public void windowClosing(java.awt.event.WindowEvent evt) {
            formWindowClosing(evt);
        }
    });

    dataTables.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
    dataTables.setName(""); // NOI18N
    dataTables.addChangeListener(new javax.swing.event.ChangeListener() {
        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            dataTablesStateChanged(evt);
        }
    });

    albumDataTable.setModel(defaultAlbumModel
    );
    albumDataTable.setColumnSelectionAllowed(false);
    albumDataTable.setRowSelectionAllowed(false);
    albumDataTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
    albumDataScrollPane.setViewportView(albumDataTable);
    albumDataTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    dataTables.addTab("Album", albumDataScrollPane);

    studioDataTable.setModel(defaultStudioModel);
    studioDataTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
    studioDataTable.setColumnSelectionAllowed(false);
    studioDataTable.setRowSelectionAllowed(false);
    studioDataScrollPane.setViewportView(studioDataTable);

    dataTables.addTab("Studio", studioDataScrollPane);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(dataTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(dataTables, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
    );

    resultList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    resultList.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            resultListMouseClicked(evt);
        }
    });
    resultScrollPane.setViewportView(resultList);

    insertAlbumButton.setText("Insert Album");
    insertAlbumButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            insertAlbumButtonActionPerformed(evt);
        }
    });

    removeButton.setText("Remove Album");
    removeButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            removeButtonActionPerformed(evt);
        }
    });

    insertStudioButton.setText("Insert Studio");
    insertStudioButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            insertStudioButtonActionPerformed(evt);
        }
    });
    if (isAlbumTab()) {
        insertStudioButton.setEnabled(false);
    }

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(56, 56, 56)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(insertAlbumButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(insertStudioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(39, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(insertAlbumButton)
                    .addGap(18, 18, 18)
                    .addComponent(removeButton)
                    .addGap(18, 18, 18)
                    .addComponent(insertStudioButton)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        accessObject.closeConnection();
    }//GEN-LAST:event_formWindowClosing

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeButtonActionPerformed

    private void resultListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultListMouseClicked
        Point mousePosition = evt.getPoint();
        resultList.setSelectedValue(resultList.getComponentAt(mousePosition), true);
        
        if (resultList.isSelectedIndex(selectedAlbum)) {
            resultList.clearSelection();
            albumDataTable.setModel(defaultAlbumModel);
            selectedAlbum = -1;
        }
        else {
            selectedAlbum = resultList.getSelectedIndex();
            populateTable(accessObject.listAlbumData(albums[selectedAlbum]));
        }
    }//GEN-LAST:event_resultListMouseClicked

    private void insertAlbumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAlbumButtonActionPerformed
        ArrayList<String> albumData = new ArrayList<>();
        
        for (int i = 0; i < 6; i++) {
            albumData.add(((AlbumTableModel)albumDataTable.getModel()).
            getValueAt(0, i).toString());
        }
        
        String result = accessObject.insertAlbum(albumData);
        
        if (result.equals("Insert successful!"))
            JOptionPane.showMessageDialog(this, result);
        else
            JOptionPane.showMessageDialog(this, result, 
             "Error", JOptionPane.ERROR_MESSAGE);
        populateList(accessObject.listAlbumTitles());
    }//GEN-LAST:event_insertAlbumButtonActionPerformed

    private void insertStudioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertStudioButtonActionPerformed
        
    }//GEN-LAST:event_insertStudioButtonActionPerformed

    private void dataTablesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dataTablesStateChanged
        if (isAlbumTab()) {
            insertAlbumButton.setEnabled(true);
            insertStudioButton.setEnabled(false);
        }
        else {
            insertAlbumButton.setEnabled(false);
            insertStudioButton.setEnabled(true);
        }
    }//GEN-LAST:event_dataTablesStateChanged

    public void populateList(ArrayList<String> list) {
        albums = list.toArray(new String[list.size()]);
        resultList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = albums;
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
    }
    
    public void populateTable(ArrayList<String> album ) {
        AlbumTableModel tableModel = new AlbumTableModel(album);
        tableModel.setCellsEditable(false);
        albumDataTable.setModel(tableModel);
    }
    
    public boolean isAlbumTab() {
        String currentTab = dataTables.getTitleAt(dataTables.getSelectedIndex());
        return (currentTab.equals("Album"));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDBC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDBC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDBC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDBC_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JDBC_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane albumDataScrollPane;
    private javax.swing.JTable albumDataTable;
    private javax.swing.JTabbedPane dataTables;
    private javax.swing.JButton insertAlbumButton;
    private javax.swing.JButton insertStudioButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton removeButton;
    private javax.swing.JList resultList;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JScrollPane studioDataScrollPane;
    private javax.swing.JTable studioDataTable;
    // End of variables declaration//GEN-END:variables
}
